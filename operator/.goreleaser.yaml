# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    - make pre-build

builds:
  - main: ./cmd/main.go
    flags:
      - -o=bin/manager
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      # - windows
      # - darwin
    goarch:
      - amd64
      - arm64

# archives:
#   - format: tar.gz
#     # this name template makes the OS and Arch compatible with the results of `uname`.
#     name_template: >-
#       {{ .ProjectName }}_
#       {{- title .Os }}_
#       {{- if eq .Arch "amd64" }}x86_64
#       {{- else if eq .Arch "386" }}i386
#       {{- else }}{{ .Arch }}{{ end }}
#       {{- if .Arm }}v{{ .Arm }}{{ end }}
#     # use zip for windows archives
#     format_overrides:
#       - goos: windows
#         format: zip

dockers:
  - goos: linux
    goarch: amd64
    image_templates:
      - "{{ .Env.GITHUB_REGISTRY }}/{{ .ProjectName }}:{{ .Env.IMAGE_TAG }}-amd64"
    use: buildx
    dockerfile: Dockerfile
    build_flag_templates:
      - "--platform=linux/amd64"

  - goos: linux
    goarch: arm64
    image_templates:
      - "{{ .Env.GITHUB_REGISTRY }}/{{ .ProjectName }}:{{ .Env.IMAGE_TAG }}-arm6"
    use: buildx
    dockerfile: Dockerfile
    build_flag_templates:
      - "--platform=linux/arm64"

docker_manifests:
  - name_template: "{{ .Env.GITHUB_REGISTRY }}/{{ .ProjectName }}:{{ .Env.IMAGE_TAG }}"
    image_templates:
      - "{{ .Env.GITHUB_REGISTRY }}/{{ .ProjectName }}:{{ .Env.IMAGE_TAG }}-amd64"
      - "{{ .Env.GITHUB_REGISTRY }}/{{ .ProjectName }}:{{ .Env.IMAGE_TAG }}-arm64"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
