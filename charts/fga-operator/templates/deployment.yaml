apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fga-operator.fullname" . }}-controller-manager
  labels:
    control-plane: controller-manager
  {{- include "fga-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "fga-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
      {{- include "fga-operator.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args: {{- toYaml .Values.controllerManager.manager.args | nindent 8 }}
        command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        {{- if .Values.controllerManager.openFgaUrlEnvVar }}
        - name: OPENFGA_API_URL
          value: {{ .Values.controllerManager.openFgaUrlEnvVar }}
        {{- end }}
        {{- if .Values.controllerManager.openFgaUrlFromSecret }}
        - name: OPENFGA_API_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.controllerManager.openFgaUrlFromSecret }}
              key: OPENFGA_API_URL
        {{- end }}
        {{- if .Values.controllerManager.openFgaApiTokenEnvVar }}
        - name: OPENFGA_API_TOKEN
          value: {{ .Values.controllerManager.openFgaApiTokenEnvVar }}
        {{- end }}  
        {{- if .Values.controllerManager.openFgaApiTokenFromSecret }}
        - name: OPENFGA_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.controllerManager.openFgaApiTokenFromSecret }}
              key: OPENFGA_API_TOKEN
        {{- end }}
        {{- with .Values.controllerManager.extraEnvVars }}
            {{- toYaml . | nindent 8 }}
        {{- end }}
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag | default .Chart.AppVersion }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10
          }}
        securityContext: {{- toYaml .Values.controllerManager.manager.containerSecurityContext
          | nindent 10 }}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ include "fga-operator.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10
